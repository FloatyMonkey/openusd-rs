use crate::declare_public_tokens;
use crate::tf;

declare_public_tokens!(FieldKeys, FIELD_KEYS, [
	active: "active",
	allowed_tokens: "allowedTokens",
	asset_info: "assetInfo",
	color_configuration: "colorConfiguration",
	color_management_system: "colorManagementSystem",
	color_space: "colorSpace",
	comment: "comment",
	connection_paths: "connectionPaths",
	custom: "custom",
	custom_data: "customData",
	custom_layer_data: "customLayerData",
	default: "default",
	default_prim: "defaultPrim",
	display_group: "displayGroup",
	display_group_order: "displayGroupOrder",
	display_name: "displayName",
	display_unit: "displayUnit",
	documentation: "documentation",
	end_time_code: "endTimeCode",
	expression_variables: "expressionVariables",
	frame_precision: "framePrecision",
	frames_per_second: "framesPerSecond",
	hidden: "hidden",
	has_owned_sub_layers: "hasOwnedSubLayers",
	inherit_paths: "inheritPaths",
	instanceable: "instanceable",
	kind: "kind",
	layer_relocates: "layerRelocates",
	prim_order: "primOrder",
	no_load_hint: "noLoadHint",
	owner: "owner",
	payload: "payload",
	permission: "permission",
	prefix: "prefix",
	prefix_substitutions: "prefixSubstitutions",
	property_order: "propertyOrder",
	references: "references",
	relocates: "relocates",
	session_owner: "sessionOwner",
	specializes: "specializes",
	specifier: "specifier",
	spline: "spline",
	start_time_code: "startTimeCode",
	sub_layers: "subLayers",
	sub_layer_offsets: "subLayerOffsets",
	suffix: "suffix",
	suffix_substitutions: "suffixSubstitutions",
	symmetric_peer: "symmetricPeer",
	symmetry_args: "symmetryArgs",
	symmetry_arguments: "symmetryArguments",
	symmetry_function: "symmetryFunction",
	target_paths: "targetPaths",
	time_samples: "timeSamples",
	time_codes_per_second: "timeCodesPerSecond",
	type_name: "typeName",
	variant_selection: "variantSelection",
	variability: "variability",
	variant_set_names: "variantSetNames"
]);

declare_public_tokens!(ChildrenKeys, CHILDREN_KEYS, [
	connection_children: "connectionChildren",
	expression_children: "expressionChildren",
	mapper_arg_children: "mapperArgChildren",
	mapper_children: "mapperChildren",
	prim_children: "primChildren",
	property_children: "properties",
	relationship_target_children: "targetChildren",
	variant_children: "variantChildren",
	variant_set_children: "variantSetChildren"
]);
